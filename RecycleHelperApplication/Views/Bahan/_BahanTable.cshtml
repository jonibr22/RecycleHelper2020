@model RecycleHelperApplication.ViewModels.BahanViewModels.BahanTableViewModel
@{ 
    var ListKategoriBahan = Model.ListKategoriBahan;
}
<div style="margin-bottom: 10px">
    <div style="display: inline;">
        <h2 style="display: inline;">List Bahan</h2>
    </div>
    <div style="display: inline;" class="pull-right">
        @using (Html.BeginForm("Delete", "Bahan", FormMethod.Post, new { id = "form_delete", @class = "pull-right", @style = "padding: 0 5px;" }))
        {
            @Html.Hidden("hddSelectedIds")
            <input type="button" value="Delete" class="btn btn-danger" id="btnDelete" />
        }
        @using (Html.BeginForm("Add", "Bahan", FormMethod.Post, new { id = "form_add", @class = "pull-right", @style = "padding: 0 5px;" }))
        {
            <input type="submit" value="Add" class="btn btn-primary" id="btnAdd" />
        }
    </div>
</div>
<table id="categories-datatable">
    <thead>
        <tr>
            <th></th>
            <th width="5%"></th>
            <th width="37%">Nama</th>
            <th width="38%">Kategori Bahan</th>
            <th width="20%">Toggle</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var a in Model.ListBahan)
        {
            <tr>
                <td>@a.IdBahan</td>
                <td>
                    <div style="text-align: center;">
                        <span class="chkPilih">@Html.CheckBox("cbx_bahan" + a.IdBahan + a.IdKategoriBahan, false, new { value = a.IdBahan, a.IdKategoriBahan })</span>
                    </div>
                </td>
                <td>@a.NamaBahan</td>
                <td>@ListKategoriBahan.First(x => x.IdKategoriBahan == a.IdKategoriBahan).NamaKategoriBahan</td>
                <td><button class='btn btn-secondary btnEdit' type="button">Edit</button></td>
            </tr>
        }
    </tbody>
</table>
<script type="text/javascript">
    var table = $("#categories-datatable").DataTable({
        order: [[0, "asc"]],
        columnDefs: [
            { visible: false, targets: [0] },
            { orderable: false, targets: [1] },
            { orderable: true, targets: [2] },
            { orderable: false, targets: [3] }
        ],
        responsive: true,
        autoWidth: false,
        scrollX: false,
        fixedHeader: true
    });

    $('#categories-datatable tbody').on('click', '.btnEdit', function () {
        var data = table.row($(this).parents('tr')).data();
        var IdBahan = data[0];
        if (IdBahan !== undefined) {
            var targetUrl = location.origin + '/Bahan/SelectBahanToEdit';
            $.ajax({
                type: 'POST',
                url: targetUrl,
                data: { 'IdBahan': IdBahan },
                beforeSend: function (e) {
                    startLoaderScreen();
                },
                success: function (data) {
                    $('#form_bahancon').show();
                    $('#idbahan_field').val(data.id);
                    $('#namabahan_field').val(data.name);
                    $('#idkategoribahan_field').val(data.idKategori);
                },
                error: function (e) {
                    showAlert('error', e);
                }
            })
        }
    });
    $('#categories-datatable tbody').on('change', 'td', function (event) {
        var deletedList = [];
        var value = $(this).find('input').attr('value');
        if ($('#hddSelectedIds').val()) {
            deletedList = $('#hddSelectedIds').val().split(',');
        }

        if ($(this).find('input').is(':checked')) {
            deletedList.push(value);
            $('#hddSelectedIds').val(deletedList.join(','));
        }
        else {
            var index = deletedList.indexOf(value);
            if (index >= 0)
                deletedList.splice(index, 1);
            $('#hddSelectedIds').val(deletedList.join(','));
        }
    });
    $("#btnDelete").click(function () {
        var jumlahHapusBahan = 0;
        $('#categories-datatable').DataTable().rows().iterator('row', function (context, index) {
            var node = $(this.row(index).node());
            //untuk mengecek apakah ada bahan yang dipilih untuk dihapus
            if (node.find("input")[0].checked) {
                //parameter showAlert : tipe alert, pesan yang ingin ditampilkan, form yang ingin di submit ketika konfirmasi
                jumlahHapusBahan++;
            }
        });
        if (jumlahHapusBahan == 0) {
            showAlert('error', 'Tidak ada data yang dipilih!');
        }
        else {
            showAlert('confirmation', 'Apakah anda ingin menghapus data ini?', 'form_delete');
        }
    });
</script>


